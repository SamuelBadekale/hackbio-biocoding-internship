'''Function 2: Write a function that simulates and generates a logistic population growth curve. Your function should include 2 extra parameters that randomize the length of the lag phase and the exponential phase [See population curve here] . Most living populations follow a logistic population growth. Therefore, your growth curve can be: Population Size vs Time, Cell density vs Time, OD vs Time, CFU vs Time, etc
Using your function, generate a dataframe with 100 different growth curves'''

#Nt = K / (1 + (2.71828**(-r*t)))where Nt is the population size at time(minutes) t, K is the carrying capacity, r is the growth rate 
def logistic_curve(time,  K = 1000):
    population_size = {}
    loop_range = range(time+1)#"time + 1" is to meet the actual time inputed
    midpoint = sum(loop_range)/len(loop_range)
    lag_range = (time % 11) + 5#randomizes lag phase duration
    exp_range = (time % 17) + 20#randomizes exponential phase duration
    for minutes in loop_range:
        if minutes < lag_range:
            r = 0.2#A slower growth rate make growth slower in the lag phase. Since the lower the growth rate, the slower the increase in population size
            logistic_growth = K / (1 + (2.71828**(-r*(minutes-midpoint))))
            population_size.update({minutes : logistic_growth})
        elif minutes > lag_range and minutes <= exp_range:#make growth rate faster in the exponential phase
            r =0.7
            logistic_growth = K / (1 + (2.71828**(-r*(minutes-midpoint))))
            population_size.update({minutes : logistic_growth}) #Input the results into the dictionary
        elif minutes > exp_range:#Growth rate reduces to ensure transition into stationary phase
            r = 0.5
            logistic_growth = K / (1 + (2.71828**(-r*(minutes-midpoint))))
            population_size.update({minutes : logistic_growth})
    print(f"The Population size at each minute is given as {population_size}")
    return population_size
    return midpoint
    return r
    return K
    return logistic_growth
    
example = logistic_curve(100)
